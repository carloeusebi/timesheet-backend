name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Attempt login.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jorge27@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: labore
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: jorge27@example.org
      password: labore
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/timesheets
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List the Timesheets.'
      description: 'Returns all the User associated Timesheets. If User is Admin retruns all the Timesheets.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filters[employee]':
        name: 'filters[employee]'
        description: 'Filters by employee name.'
        required: false
        example: 'Carlo Eusebi'
        type: string
        enumValues: []
        custom: []
      'filters[project]':
        name: 'filters[project]'
        description: 'Filters by project name.'
        required: false
        example: Youvolution
        type: string
        enumValues: []
        custom: []
      'filters[activity]':
        name: 'filters[activity]'
        description: 'Filters by activity name.'
        required: false
        example: Development
        type: string
        enumValues: []
        custom: []
      'filters[dateFrom]':
        name: 'filters[dateFrom]'
        description: 'Filters by date.'
        required: false
        example: '2023-28-09'
        type: string
        enumValues: []
        custom: []
      'filters[dateTo]':
        name: 'filters[dateTo]'
        description: 'Filters by date.'
        required: false
        example: '2023-29-09'
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      'filters[employee]': 'Carlo Eusebi'
      'filters[project]': Youvolution
      'filters[activity]': Development
      'filters[dateFrom]': '2023-28-09'
      'filters[dateTo]': '2023-29-09'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"userId":10,"projectId":2,"activityId":3,"employee":"Deangelo Harvey","project":"Youvolution","activity":"Testing","activityStart":"2023-01-04 12:57:15","activityEnd":"2023-01-04 16:46:15","description":"Aut laudantium qui rerum. Repudiandae dolor laboriosam qui consequatur magnam omnis. Rerum est deserunt dolore saepe. Alias ut ut dignissimos qui. Voluptas esse esse quo dolores id. Alias est et quo ut et et. Expedita occaecati unde vitae atque sequi qui. Incidunt sequi aut ea consequatur. Nihil quo ea fuga et ut facere at dolorem."},{"id":1,"userId":10,"projectId":2,"activityId":3,"employee":"Deangelo Harvey","project":"Youvolution","activity":"Testing","activityStart":"2023-01-04 12:57:15","activityEnd":"2023-01-04 16:46:15","description":"Aut laudantium qui rerum. Repudiandae dolor laboriosam qui consequatur magnam omnis. Rerum est deserunt dolore saepe. Alias ut ut dignissimos qui. Voluptas esse esse quo dolores id. Alias est et quo ut et et. Expedita occaecati unde vitae atque sequi qui. Incidunt sequi aut ea consequatur. Nihil quo ea fuga et ut facere at dolorem."}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/timesheets
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log a new timesheet.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The ID of the Project.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
      activity_id:
        name: activity_id
        description: 'The ID of the Activity.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
      activity_start:
        name: activity_start
        description: 'Must be a valid date.'
        required: true
        example: '2023-09-30T07:00:24'
        type: string
        enumValues: []
        custom: []
      activity_end:
        name: activity_end
        description: 'Must be a valid date.'
        required: true
        example: '2023-09-30T07:00:24'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      project_id: '1'
      activity_id: '1'
      activity_start: '2023-09-30T07:00:24'
      activity_end: '2023-09-30T07:00:24'
      description: tempore
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"userId":10,"projectId":2,"activityId":3,"employee":"Deangelo Harvey","project":"Youvolution","activity":"Testing","activityStart":"2023-01-04 12:57:15","activityEnd":"2023-01-04 16:46:15","description":"Aut laudantium qui rerum. Repudiandae dolor laboriosam qui consequatur magnam omnis. Rerum est deserunt dolore saepe. Alias ut ut dignissimos qui. Voluptas esse esse quo dolores id. Alias est et quo ut et et. Expedita occaecati unde vitae atque sequi qui. Incidunt sequi aut ea consequatur. Nihil quo ea fuga et ut facere at dolorem."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{["error": "message"]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/timesheets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified Timesheet.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timesheet.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"userId":10,"projectId":2,"activityId":3,"employee":"Deangelo Harvey","project":"Youvolution","activity":"Testing","activityStart":"2023-01-04 12:57:15","activityEnd":"2023-01-04 16:46:15","description":"Aut laudantium qui rerum. Repudiandae dolor laboriosam qui consequatur magnam omnis. Rerum est deserunt dolore saepe. Alias ut ut dignissimos qui. Voluptas esse esse quo dolores id. Alias est et quo ut et et. Expedita occaecati unde vitae atque sequi qui. Incidunt sequi aut ea consequatur. Nihil quo ea fuga et ut facere at dolorem."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"errors": "Timesheet not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/timesheets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Updates an existing Timesheet.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timesheet.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The ID of the Project.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
      activity_id:
        name: activity_id
        description: 'The ID of the Activity.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
      activity_start:
        name: activity_start
        description: 'Must be a valid date.'
        required: true
        example: '2023-09-30T07:00:24'
        type: string
        enumValues: []
        custom: []
      activity_end:
        name: activity_end
        description: 'Must be a valid date.'
        required: true
        example: '2023-09-30T07:00:24'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      project_id: '1'
      activity_id: '1'
      activity_start: '2023-09-30T07:00:24'
      activity_end: '2023-09-30T07:00:24'
      description: quia
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"userId":10,"projectId":2,"activityId":3,"employee":"Deangelo Harvey","project":"Youvolution","activity":"Testing","activityStart":"2023-01-04 12:57:15","activityEnd":"2023-01-04 16:46:15","description":"Aut laudantium qui rerum. Repudiandae dolor laboriosam qui consequatur magnam omnis. Rerum est deserunt dolore saepe. Alias ut ut dignissimos qui. Voluptas esse esse quo dolores id. Alias est et quo ut et et. Expedita occaecati unde vitae atque sequi qui. Incidunt sequi aut ea consequatur. Nihil quo ea fuga et ut facere at dolorem."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"errors": "Timesheet not found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{["error": "message"]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/projects
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Returns a list of Projects.'
      description: 'Returns all the Users associated Projects. If User is Admin returns all the Projects.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/projects
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Project.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        custom: []
      user_ids:
        name: user_ids
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      activity_ids:
        name: activity_ids
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: rerum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified Project.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/projects/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing Project.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        custom: []
      user_ids:
        name: user_ids
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      activity_ids:
        name: activity_ids
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: a
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/projects/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove an existing Project.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/activities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all the activities.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/activities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Activity.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: sit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/activities/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified Activity.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/activities/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update at existing Activity.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/activities/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the specified Activity.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Return a list of the the Users.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: davis.timmothy@example.net
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: quis
      email: davis.timmothy@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Return the specified User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: exercitationem
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: lisandro97@example.net
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: exercitationem
      email: lisandro97@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
